DROP DATABASE IF EXISTS UNIVERSITYDBtest;
CREATE DATABASE UNIVERSITYDBtest;
USE UNIVERSITYDBtest;

CREATE TABLE PERSON (
    SSN CHAR(9) PRIMARY KEY,
    Fname VARCHAR(50),
    Minit CHAR(1),
    Lname VARCHAR(50),
    Bdate DATE,
    Sex CHAR(1),
    Street VARCHAR(100),
    Apt_no VARCHAR(10),
    City VARCHAR(50),
    State VARCHAR(50),
    Zip VARCHAR(10)
);

CREATE TABLE STUDENT (
    SSN CHAR(9) PRIMARY KEY,
    Class INT,
    FOREIGN KEY (SSN) REFERENCES PERSON(SSN)
);

CREATE TABLE GRAD_STUDENT (
    SSN CHAR(9) PRIMARY KEY,
    Class INT CHECK (Class = 5),
    FOREIGN KEY (SSN) REFERENCES STUDENT(SSN)
);

CREATE TABLE FACULTY (
    SSN CHAR(9) PRIMARY KEY,
    Foffice VARCHAR(20),
    Fphone VARCHAR(20),
    Salary DECIMAL(10,2),
    Faculty_Rank VARCHAR(50),
    FOREIGN KEY (SSN) REFERENCES PERSON(SSN)
);

CREATE TABLE DEPARTMENT (
    Dname VARCHAR(50) PRIMARY KEY,
    Office VARCHAR(50),
    Dphone VARCHAR(20)
);

CREATE TABLE COLLEGE (
    Cname VARCHAR(50) PRIMARY KEY,
    Coffice VARCHAR(50),
    Dean VARCHAR(50)
);

CREATE TABLE COURSE (
    Course_ID VARCHAR(10) PRIMARY KEY,
    Cdesc VARCHAR(255),
    Cname VARCHAR(50),
    FOREIGN KEY (Cname) REFERENCES COLLEGE(Cname)
);

CREATE TABLE SECTION (
    Sec_ID INT,
    Current_Year INT,
    PRIMARY KEY (Sec_ID, Current_Year)
);

CREATE TABLE CURRENT_SECTION (
    Sec_ID INT,
    Current_Year INT,
    Current_Qtr VARCHAR(20),
    PRIMARY KEY (Sec_ID, Current_Year),
    FOREIGN KEY (Sec_ID, Current_Year) REFERENCES SECTION(Sec_ID, Current_Year)
);

CREATE TABLE REGISTERED (
    SSN CHAR(9),
    Sec_ID INT,
    Current_Year INT,
    Grade CHAR(2),
    PRIMARY KEY (SSN, Sec_ID, Current_Year),
    FOREIGN KEY (SSN) REFERENCES STUDENT(SSN),
    FOREIGN KEY (Sec_ID, Current_Year) REFERENCES SECTION(Sec_ID, Current_Year)
);

CREATE TABLE TRANSCRIPT (
    SSN CHAR(9),
    Sec_ID INT,
    Current_Year INT,
    PRIMARY KEY (SSN, Sec_ID, Current_Year),
    FOREIGN KEY (SSN) REFERENCES STUDENT(SSN),
    FOREIGN KEY (Sec_ID, Current_Year) REFERENCES SECTION(Sec_ID, Current_Year)
);

CREATE TABLE MAJOR (
    SSN CHAR(9),
    Dname VARCHAR(50),
    PRIMARY KEY (SSN, Dname),
    FOREIGN KEY (SSN) REFERENCES STUDENT(SSN),
    FOREIGN KEY (Dname) REFERENCES DEPARTMENT(Dname)
);

CREATE TABLE MINOR (
    SSN CHAR(9),
    Dname VARCHAR(50),
    PRIMARY KEY (SSN, Dname),
    FOREIGN KEY (SSN) REFERENCES STUDENT(SSN),
    FOREIGN KEY (Dname) REFERENCES DEPARTMENT(Dname)
);

CREATE TABLE CHAIR (
    SSN CHAR(9),
    Dname VARCHAR(50),
    PRIMARY KEY (SSN, Dname),
    FOREIGN KEY (SSN) REFERENCES FACULTY(SSN),
    FOREIGN KEY (Dname) REFERENCES DEPARTMENT(Dname)
);

CREATE TABLE COMMITTEE (
    SSN CHAR(9),
    PRIMARY KEY (SSN),
    FOREIGN KEY (SSN) REFERENCES GRAD_STUDENT(SSN)
);

CREATE TABLE ADVISOR (
    Faculty_ID CHAR(9),
    GradStudent_ID CHAR(9),
    College VARCHAR(50),
    Degree VARCHAR(50),
    Grad_Year INT,
    PRIMARY KEY (Faculty_ID, GradStudent_ID),
    FOREIGN KEY (Faculty_ID) REFERENCES FACULTY(SSN),
    FOREIGN KEY (GradStudent_ID) REFERENCES GRAD_STUDENT(SSN)
);

CREATE TABLE GRANTS (
    Grant_No INT PRIMARY KEY,
    Title VARCHAR(255),
    Agency VARCHAR(100),
    PI CHAR(9),
    FOREIGN KEY (PI) REFERENCES FACULTY(SSN)
);

CREATE TABLE SUPPORT (
    Grant_No INT,
    Start_Date DATE,
    Support_Time INT,
    End_Date DATE,
    PRIMARY KEY (Grant_No, Start_Date),
    FOREIGN KEY (Grant_No) REFERENCES GRANTS(Grant_No)
);

CREATE TABLE INSTRUCTOR_RESEARCHER (
    SSN CHAR(9) PRIMARY KEY,
    FOREIGN KEY (SSN) REFERENCES FACULTY(SSN)
);

CREATE TABLE TEACH (
    SSN CHAR(9),
    Sec_ID INT,
    Current_Year INT,
    PRIMARY KEY (SSN, Sec_ID, Current_Year),
    FOREIGN KEY (SSN) REFERENCES INSTRUCTOR_RESEARCHER(SSN),
    FOREIGN KEY (Sec_ID, Current_Year) REFERENCES SECTION(Sec_ID, Current_Year)
);

CREATE TABLE BELONGS (
    SSN CHAR(9),
    Dname VARCHAR(50),
    PRIMARY KEY (SSN, Dname),
    FOREIGN KEY (SSN) REFERENCES INSTRUCTOR_RESEARCHER(SSN),
    FOREIGN KEY (Dname) REFERENCES DEPARTMENT(Dname)
);

CREATE TABLE DEGREES (
    DEG_GS_ID CHAR(9) PRIMARY KEY,
    COLLEGE VARCHAR(50),
    DEGREE VARCHAR(50),
    DEGREEYEAR INT,
    FOREIGN KEY (DEG_GS_ID) REFERENCES GRAD_STUDENT(SSN)
);

Show tables;
