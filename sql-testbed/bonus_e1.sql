DROP DATABASE IF EXISTS PLANESDB;
CREATE DATABASE PLANESDB;
USE PLANESDB;

DROP USER IF EXISTS 'exambonus'@'localhost';
CREATE USER 'exambonus'@'localhost' IDENTIFIED BY 'bonus123';
GRANT ALL ON PLANESDB.* TO 'exambonus'@'localhost';
FLUSH PRIVILEGES;
COMMIT;

CREATE TABLE CORPORATION (
COR_NAME VARCHAR(20) PRIMARY KEY NOT NULL,
ADDRESS VARCHAR(50),
PHONE VARCHAR(20)
);
CREATE TABLE PERSON (
SSN VARCHAR(11) PRIMARY KEY NOT NULL,
PER_NAME VARCHAR(30),
ADDRESS VARCHAR(50),
PHONE VARCHAR(20)
);
CREATE TABLE OWNER_TABLE (
OWNER_ID INT PRIMARY KEY,
    CATEGORYTYPE ENUM('CORPORATION', 'PERSON') NOT NULL,
    COR_NAME VARCHAR(20),
    SSN VARCHAR(11),
    FOREIGN KEY (COR_NAME) REFERENCES CORPORATION(COR_NAME) ON DELETE CASCADE,
    FOREIGN KEY (SSN) REFERENCES PERSON(SSN) ON DELETE CASCADE,
    CHECK (
        (CATEGORYTYPE = 'CORPORATION' AND COR_NAME IS NOT NULL AND SSN IS NULL) OR
        (CATEGORYTYPE = 'PERSON' AND SSN IS NOT NULL AND COR_NAME IS NULL)
    )
);
CREATE TABLE EMPLOYEE (
SSN VARCHAR(11) PRIMARY KEY,
SALARY INT,
SHIFT INT,
FOREIGN KEY (SSN) REFERENCES PERSON(SSN) ON DELETE CASCADE
);
CREATE TABLE PILOT (
SSN VARCHAR(11) PRIMARY KEY,
RESTR CHAR,
LIC_NUM INT,
FOREIGN KEY (SSN) REFERENCES PERSON(SSN)
);
CREATE TABLE PLANE_TYPE (
MODEL VARCHAR(20) PRIMARY KEY NOT NULL,
CAPACITY INT,
WEIGHT INT
);
CREATE TABLE HANGAR (
HANGAR_NUMBER INT PRIMARY KEY NOT NULL,
CAPACITY INT,
LOCATION VARCHAR(50)
);
CREATE TABLE AIRPLANE (
REG_NUM INT PRIMARY KEY NOT NULL,
MODEL VARCHAR(20),
HANGAR_NUMBER INT,
FOREIGN KEY (MODEL) REFERENCES PLANE_TYPE(MODEL),
FOREIGN KEY (HANGAR_NUMBER) REFERENCES HANGAR (HANGAR_NUMBER)
);

CREATE TABLE SERVICE (
SERVICE_RECORD INT PRIMARY KEY AUTO_INCREMENT,
REG_NUM INT,
SERVICE_DATE DATE,
WORKCODE INT,
HOURS INT,
FOREIGN KEY (REG_NUM) REFERENCES AIRPLANE (REG_NUM)
);

CREATE TABLE WORKS_ON (
SSN VARCHAR(11),
MODEL VARCHAR(20),
PRIMARY KEY (SSN, MODEL),
FOREIGN KEY (SSN) REFERENCES EMPLOYEE (SSN),
FOREIGN KEY (MODEL) REFERENCES PLANE_TYPE (MODEL)
);
CREATE TABLE FLIES (
SSN VARCHAR(11),
MODEL VARCHAR(20),
PRIMARY KEY (SSN, MODEL),
FOREIGN KEY (SSN) REFERENCES PILOT (SSN),
FOREIGN KEY (MODEL) REFERENCES PLANE_TYPE (MODEL)
);
CREATE TABLE MAINTAIN (
SSN VARCHAR(11),
SERVICE_RECORD INT,
PRIMARY KEY (SSN, SERVICE_RECORD),
FOREIGN KEY (SSN) REFERENCES EMPLOYEE (SSN),
FOREIGN KEY (SERVICE_RECORD) REFERENCES SERVICE (SERVICE_RECORD)
);
CREATE TABLE OWNS (
REG_NUM INT,
SSN VARCHAR(11),
PDATE DATE,
PRIMARY KEY (SSN, REG_NUM),
FOREIGN KEY (REG_NUM) REFERENCES AIRPLANE (REG_NUM),
FOREIGN KEY (SSN) REFERENCES OWNER_TABLE (SSN)
);

/*run this part after inserting via python e1_bonus.py*/
/*inserts run correctly, select * from statements show data is populated*/
/*metadata was not updating, tried running analyze and it still has not updated*/

ANALYZE TABLE PERSON;
ANALYZE TABLE CORPORATION;
ANALYZE TABLE OWNER_TABLE;
ANALYZE TABLE HANGAR;
ANALYZE TABLE PLANE_TYPE;
ANALYZE TABLE AIRPLANE;
ANALYZE TABLE EMPLOYEE;
ANALYZE TABLE PILOT;
ANALYZE TABLE SERVICE;
ANALYZE TABLE OWNS;
ANALYZE TABLE FLIES;
ANALYZE TABLE MAINTAIN;
ANALYZE TABLE WORKS_ON;

SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'PLANESDB' ORDER BY CREATE_TIME ASC;
SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'PLANESDB' ORDER BY TABLE_NAME, COLUMN_NAME ASC;
SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA = 'PLANESDB' ORDER BY TABLE_NAME ASC;

SELECT * FROM PERSON;
SELECT * FROM CORPORATION;
SELECT * FROM OWNER_TABLE;
SELECT * FROM HANGAR;
SELECT * FROM PLANE_TYPE;
SELECT * FROM AIRPLANE;
SELECT * FROM EMPLOYEE;
SELECT * FROM PILOT;
SELECT * FROM SERVICE;
SELECT * FROM OWNS;
SELECT * FROM FLIES;
SELECT * FROM MAINTAIN;
SELECT * FROM WORKS_ON;

SHOW TABLES;